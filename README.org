#+TITLE: immersive-translate: Immersive Bilingual Translation
[[https://melpa.org/#/immersive-translate][file:https://melpa.org/packages/immersive-translate-badge.svg]]

[[README_CN.org][中文文档]]
* Introductions
Inspired by [[https://github.com/immersive-translate/immersive-translate][immersive-translate/immersive-translate]], I have implemented similar functionality in Emacs.
* Screenshots
** elfeed
[[images/screenshots/elfeed.png]]
** nov
[[images/screenshots/nov.png]]
** info
[[images/screenshots/info.png]]
** helpful/help
[[images/screenshots/help.png]]
* Installation
1. You need to install [[https://curl.se/][curl]] on your device first. If you want to use the translate-shell backend, you also need to install [[https://github.com/soimort/translate-shell][translate-shell]].
2. ~M-x package-install RET gptel RET~

#+begin_src emacs-lisp
  (require 'immersive-translate)
  (add-hook 'elfeed-show-mode-hook #'immersive-translate-setup)
  (add-hook 'nov-pre-html-render-hook #'immersive-translate-setup)
  ;; use Baidu Translation
  (setq immersive-translate-backend 'baidu
        immersive-translate-baidu-appid "your-appid")

  ;; use ChatGPT
  ;; (setq immersive-translate-backend 'chatgpt
  ;;       immersive-translate-chatgpt-host "api.openai.com")

  ;; use translate-shell
  ;; (setq immersive-translate-backend 'trans)

#+end_src
* Usage
- =immersive-translate-buffer=
  
  Translate the current buffer. /Note/: This may consume a large number of tokens.

- =immersive-translate-paragraph=

  Translate the current paragraph.

- =immersive-translate-clear=
  
  Clear all translated text.

- =immersive-translate-auto-mode=

  Translate, when enabled, automatically translate the visible portion of the current window.

- =immersive-translate-abort=
  
  Stop all ongoing translation processes in the current buffer.
* Customization
- =immersive-translate-backend=

  The translation backend used. See [[#api_key][API setting]] for details.

  Currently available translation services:
  - chatgpt (https://openai.com/api/)
  - baidu (https://fanyi-api.baidu.com/)
  - translate-shell (https://github.com/soimort/translate-shell)

- =immersive-translate-auto-idle=

  After enabling =immersive-translate-auto-mode=, the Emacs idle time required for the next translation to be executed.
  
- =immersive-translate-exclude-shr-tag=

  The text contained in the tags of this variable will not be translated. This variable applies to all buffers generated by =shr.el=, such as buffers in =elfeed-show-mode=, =nov-mode=, and =mu4e-view-mode=.

- =immersive-translate-chatgpt-system-prompt=
  
  System prompt used by ChatGPT.

- =immersive-translate-chatgpt-user-prompt=
  
  User prompt used by ChatGPT.

- =immersive-translate-disable-predicates=
  
  When the current paragraph does not need to be translated, return =t=. These functions in this list do not accept any parameters.


See =M-x customize-group RET immersive-translate RET= for details.
* API setting
:PROPERTIES:
:CUSTOM_ID: api_key
:END:
The translation service of this plugin requires you to apply for the corresponding API key of the service in order to use it. For more details, please refer to [[https://immersivetranslate.com/docs/services/][Translation Service API Application]]

This plugin retrieves the user's key through the built-in =auth-source.el=.

1. ChatGPT
   
   Assuming your =immersive-translate-chatgpt-host= is "api.openai.com" and the API key is 123456, add the following text to =~/.authinfo=:
  #+begin_example
    machine api.openai.com login apikey password 123456
  #+end_example
  
2. Baidu Translate
   
   Assuming your =immersive-translate-baidu-appid= is "foobar" and the API key is 123456, add the following text to =~/.authinfo=:
  #+begin_example
    machine fanyi-api.baidu.com login foobar password 123456
  #+end_example
* Add a new translation backend (PRs welcome!)
** Add online translation service
If you want to add new translation services, you can check the variables =immersive-translate-curl-get-translation-alist= and =immersive-translate-curl-get-args-alist=.

The function in the variable =immersive-translate-curl-get-args-alist= is used to construct the input parameters required when making a request.

The function in the variable =immersive-translate-curl-get-translation-alist= is used to parse the translation results returned by =curl=.
** Add local translation services
See [[immersive-translate-trans.el]]
